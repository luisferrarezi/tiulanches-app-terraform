name: 'App Infra deploy to azure'

on:
  pull_request:
    branches: [ "main" ]  

env:
  ARM_CLIENT_ID: ${{secrets.CLIENT_ID}}
  ARM_CLIENT_SECRET: ${{secrets.CLIENT_SECRET}}
  ARM_TENANT_ID: ${{secrets.TENANT_ID}}
  ARM_SUBSCRIPTION_ID: ${{secrets.SUBSCRIPTION_ID}}
  DATASOURCE_PASSWORD: ${{secrets.DATASOURCE_PASSWORD}}
  DATASOURCE_URL: ${{secrets.DATASOURCE_URL}}
  DATASOURCE_USERNAME: ${{secrets.DATASOURCE_USERNAME}}  
  ROOT_PATH: '${{ github.workspace }}/src/terraform/'

jobs:
#  terraform_plan:
#    name: 'Terraform plan'
#    runs-on: ubuntu-latest    
#    defaults:
#      run:
#        shell: bash

#    steps:
#    - name: Checkout
#      uses: actions/checkout@v4.1.1
   
#    - name: Setup Terraform
#      uses: hashicorp/setup-terraform@v1
#      with:
#        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

#    - name: Terraform Init
#      run: terraform init
#      working-directory: ${{ env.ROOT_PATH }}

#    - name: Terraform Plan
#      run: terraform plan -var db_username=$DATASOURCE_USERNAME -var db_password=$DATASOURCE_PASSWORD -var db_connection=$DATASOURCE_URL
#      working-directory: ${{ env.ROOT_PATH }}

#  terraform_apply:
#    name: 'Terraform apply'
#    runs-on: ubuntu-latest
#    needs: [ terraform_plan ]
#    environment: dev
#    defaults:
#      run:
#        shell: bash

 #   steps:
 #   - name: Checkout
 #     uses: actions/checkout@v4.1.1

 #   - name: Setup Terraform
 #     uses: hashicorp/setup-terraform@v1
 #     with:
 #       cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

 #   - name: Terraform Init
 #     run: terraform init
 #     working-directory: ${{ env.ROOT_PATH }}

 #   - name: Terraform apply
 #     run: terraform apply -var db_username=$DATASOURCE_USERNAME -var db_password=$DATASOURCE_PASSWORD -var db_connection=$DATASOURCE_URL --auto-approve
 #     working-directory: ${{ env.ROOT_PATH }}

  deploy_nginx:
    name: 'Deploy Nginx'
#    needs: [ terraform_apply ]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pages: write
      id-token: write
  
    steps:
    - name: Checkout
      uses: actions/checkout@v4.1.1

    - name: Azure Login
      uses: Azure/login@v2.0.0
      with:        
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Azure Kubernetes set context
      uses: Azure/aks-set-context@v3
      with:        
        resource-group: ${{ env.RESOURSE_GROUP }}
        cluster-name: ${{ env.CLUSTER_NAME }}
        subscription: ${{ env.SUBSCRIPTION }}
